---
- name: REMOVE APP FROM TENANT
  hosts: bigip
  gather_facts: false
  connection: local


  vars:
    uri_method: "POST"
    # default 'empty' vars to be used when first creating a new tenant


  vars_files:
    #- ../../../creds/big_creds.yaml
    - ../../../creds/terraform_output_creds.yaml
    - ../vars/tower_vars.yaml


  tasks:

  - name: FORMAT USER INPUT VARIABLES INTO NESTED LIST
    set_fact:
      format_new_app: [{"app_name": "{{ tower_app_name }}","bigip": "{{ tower_bigip }}","template": "{{ tower_app_template }}","vs_ip": "{{ tower_app_vs_ip }}","members": "{{ tower_app_members }}"}]


  - name: IF NOT EXIST, TOUCH TENANT CONFIG FILE
    file:
      path: "../tenant-config/{{ tower_bigip }}/{{ tower_tenant }}.yaml"
      state: touch


  - name: GET APPLICATION VARS FROM TENANT CONFIG FILE
    include_vars:
      file: '../tenant-config/{{ tower_bigip }}/{{ tower_tenant }}.yaml'


  - name: IF APPLICATION VAR EMPTY, ADD NEW APP TO VAR
    set_fact:
      applications: "{{ format_new_app }}"
    when: applications is not defined


  - name: COUNT APPS IN ORIGIN APPLICATION VAR 
    set_fact:
      existing_apps_length: "{{ applications|length }}"


  - name: DEBUG - APPLICATION VAR *** TENANT EXISTING *** 
    debug:
      msg: "{{ existing_apps_length }} existing 'applications' {{ applications }} *** TENANT EXISTING *** "
    when: applications is defined


  - name: DELETE (DIFFERENCE) NEW APP TO APPLICATIONS VAR
    set_fact:
      new_applications: '{{ applications | difference(format_new_app) }}'
  

  - name: COUNT APPS IN UPDATED APPLICATION VAR 
    set_fact:
      new_apps_length: "{{ new_applications|length }}"


  - name: DEBUG - APPLICATION VAR *** TENANT NEW *** 
    debug:
      msg: "{{ new_apps_length }} total 'applications' {{ new_applications }} *** TENANT NEW *** "


  - name: RENDER TEMPLATE
    set_fact:
      tenant_body: "{{ lookup('template', '../j2/multi_app_macro.j2', split_lines=False) }}"


  - name: DEBUG - TENANT BODY (AS3)
    debug:
      msg: "{{ tenant_body }}"


  - name: URI POST AS3 TO BIG-IP '{{ tower_bigip }}', TENANT '{{ tower_tenant }}'
    uri:
       url: "https://{{ inventory_hostname }}/mgmt/shared/appsvcs/declare"
       method: "{{ uri_method }}"
       #user: "{{ lookup('env', 'ANSIBLE_NET_USERNAME') }}"
       #password: "{{ lookup('env', 'ANSIBLE_NET_PASSWORD') }}"
       user: "{{bigip_user}}"
       password: "{{bigip_pass}}"
       validate_certs: no
       body: "{{ tenant_body }}"
       body_format: json

# After AS3 is successfully deployed, update the source of truth

  - name: WRITE NEW SOURCE OF TRUTH TO LOCAL FILE
    copy:
      content: "{{ { 'applications': new_applications } | to_nice_yaml() }}"
      dest: '../tenant-config/{{ tower_bigip }}/{{ tower_tenant }}.yaml'

  
  - name: GIT COMMIT 
    shell: git commit -a -m 'update ../tenant-config/{{ tower_bigip }}/{{ tower_tenant }}.yaml'
    register: command_result
    failed_when: "'fail' in command_result.stdout"


  - name: DEBUG GIT OUTPUT
    debug:
      msg: "git returned = {{ command_result.stdout }}"
  

  - name: GIT PUSH
    shell: git push